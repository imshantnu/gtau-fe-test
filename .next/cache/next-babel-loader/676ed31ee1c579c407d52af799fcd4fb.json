{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/m054777/Downloads/gtau-fe-test/components/Listings.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst STATE = Object.freeze({\n  IDLE: \"idle\",\n  FETCHING: \"fetching\",\n  ERROR: \"error\"\n});\nconst ACTIONS = Object.freeze({\n  FETCH_LISTINGS: \"FETCH_LISTINGS\",\n  FETCH_LISTINGS_SUCCESS: \"FETCH_LISTINGS_SUCCESS\",\n  FETCH_LISTINGS_ERROR: \"FETCH_LISTINGS_ERROR\",\n  VIEW_LISTING: \"VIEW_LISTING\",\n  REPLY: \"REPLY\"\n}); //Initial State and Actions\n\nconst initialState = {\n  listings: [],\n  // array of listing object,\n  state: STATE.IDLE,\n  // enum state of page/slice \"idle\" | \"fetching\" | \"error\",\n  error: undefined // error message\n\n};\n\nconst listingsReducer = (state, action) => {\n  switch (action.type) {\n    case ACTIONS.FETCH_LISTINGS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        state: STATE.FETCHING,\n        listings: []\n      });\n\n    case ACTIONS.FETCH_LISTINGS_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        state: STATE.IDLE,\n        listings: [...action.listings]\n      });\n\n    case ACTIONS.FETCH_LISTINGS_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        state: STATE.ERROR,\n        listings: [],\n        error: action.error\n      });\n\n    case ACTIONS.VIEW_LISTING:\n    case ACTIONS.REPLY:\n    default:\n      return state;\n  }\n};\n\nconst ListingsContext = React.createContext();\n\nconst ListingsProvider = ({\n  children\n}) => {\n  const [state, dispatch] = React.useReducer(listingsReducer, initialState);\n  const value = {\n    listings: state.listings,\n    state: state.state,\n    error: state.error,\n    fetch: (endpoint, query) => {\n      dispatch({\n        type: ACTIONS.FETCH_LISTINGS\n      });\n      fetch(endpoint).then(response => response.json()).then(response => {\n        dispatch({\n          type: ACTIONS.FETCH_LISTINGS_SUCCESS,\n          listings: response\n        });\n      }).catch(error => {\n        dispatch({\n          type: ACTIONS.FETCH_LISTINGS_ERROR,\n          error: error.message\n        });\n      });\n    },\n    view: title => {\n      console.info(`View: ${title}`);\n      dispatch({\n        type: ACTIONS.VIEW_LISTING\n      });\n    },\n    reply: title => {\n      console.info(`Reply: ${title}`);\n      dispatch({\n        type: ACTIONS.REPLY\n      });\n    }\n  };\n  return __jsx(ListingsContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nconst formatAsCurrency = int => {\n  if (!int) {\n    return;\n  }\n\n  return new Intl.NumberFormat(\"en-AU\", {\n    style: \"currency\",\n    currency: \"AUD\"\n  }).format(int);\n};\n\nconst Listing = ({\n  listing,\n  view,\n  reply\n}) => __jsx(\"li\", {\n  className: \"listing\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 3\n  }\n}, __jsx(\"h6\", {\n  className: \"listing__title\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }\n}, listing.title), __jsx(\"div\", {\n  className: \"listing__metadata\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }\n}, __jsx(\"span\", {\n  className: \"listing__text--higlighted\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 7\n  }\n}, formatAsCurrency(listing.price)), __jsx(\"span\", {\n  className: \"listing__text\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 7\n  }\n}, listing.location)), __jsx(\"img\", {\n  className: \"listing__img\",\n  title: listing.title,\n  src: listing.imgUrl,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }\n}), __jsx(\"p\", {\n  className: \"listing__desc\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }\n}, listing.description), __jsx(\"div\", {\n  className: \"listing__actions\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }\n}, __jsx(\"button\", {\n  className: \"listings__button\",\n  onClick: () => view(listing.title),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 7\n  }\n}, \"View\"), __jsx(\"button\", {\n  className: \"listings__button\",\n  onClick: () => reply(listing.title),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 7\n  }\n}, \"Reply\")));\n\nconst Spinner = () => __jsx(\"div\", {\n  className: \"spinner__container\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 3\n  }\n}, __jsx(\"div\", {\n  className: \"spinner\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }\n}));\n\nconst Error = ({\n  error\n}) => __jsx(\"div\", {\n  className: \"listings__error\",\n  role: \"alert\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 3\n  }\n}, __jsx(\"div\", {\n  className: \"listings__errorMessage\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }\n}, __jsx(\"h3\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 7\n  }\n}, \"An error occured, Server responded with \", error, \"!\"), __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 7\n  }\n}, \"Reload to try again!\")), __jsx(\"button\", {\n  className: \"listings__button\",\n  onClick: () => location.reload(),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }\n}, \"Reload\"));\n\nconst ListingsContainer = ({\n  dataEndpoint,\n  keyword = \"\",\n  location\n}) => {\n  const {\n    state,\n    fetch,\n    error,\n    listings,\n    view,\n    reply\n  } = React.useContext(ListingsContext);\n  React.useEffect(() => {\n    fetch(dataEndpoint, keyword);\n  }, [dataEndpoint, keyword]);\n\n  if (state === STATE.FETCHING) {\n    return __jsx(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (state === STATE.ERROR && error) {\n    return __jsx(Error, {\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"listings__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, \"Search results\"), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: \"listings__text--higlighted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, listings.length, \" results\"), \" \", \"for \", __jsx(\"span\", {\n    className: \"listings__text--higlighted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }, keyword), \" in\", \" \", __jsx(\"span\", {\n    className: \"listings__text--higlighted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, location))), listings.length === 0 && __jsx(\"span\", {\n    className: \"listings__noResults\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, \"No results found!\"), listings.length > 0 && __jsx(\"ol\", {\n    className: \"listings__grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, listings.map((listing, index) => __jsx(Listing, {\n    listing: listing,\n    key: index,\n    view: view,\n    reply: reply,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }))));\n};\n\nconst Listings = props => __jsx(ListingsProvider, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 3\n  }\n}, __jsx(ListingsContainer, _extends({}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }\n})));\n\nexport default Listings;","map":{"version":3,"sources":["/mnt/c/Users/m054777/Downloads/gtau-fe-test/components/Listings.js"],"names":["STATE","Object","freeze","IDLE","FETCHING","ERROR","ACTIONS","FETCH_LISTINGS","FETCH_LISTINGS_SUCCESS","FETCH_LISTINGS_ERROR","VIEW_LISTING","REPLY","initialState","listings","state","error","undefined","listingsReducer","action","type","ListingsContext","React","createContext","ListingsProvider","children","dispatch","useReducer","value","fetch","endpoint","query","then","response","json","catch","message","view","title","console","info","reply","formatAsCurrency","int","Intl","NumberFormat","style","currency","format","Listing","listing","price","location","imgUrl","description","Spinner","Error","reload","ListingsContainer","dataEndpoint","keyword","useContext","useEffect","length","map","index","Listings","props"],"mappings":"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","sourcesContent":["const STATE = Object.freeze({\n  IDLE: \"idle\",\n  FETCHING: \"fetching\",\n  ERROR: \"error\",\n});\nconst ACTIONS = Object.freeze({\n  FETCH_LISTINGS: \"FETCH_LISTINGS\",\n  FETCH_LISTINGS_SUCCESS: \"FETCH_LISTINGS_SUCCESS\",\n  FETCH_LISTINGS_ERROR: \"FETCH_LISTINGS_ERROR\",\n  VIEW_LISTING: \"VIEW_LISTING\",\n  REPLY: \"REPLY\",\n});\n\n//Initial State and Actions\nconst initialState = {\n  listings: [], // array of listing object,\n  state: STATE.IDLE, // enum state of page/slice \"idle\" | \"fetching\" | \"error\",\n  error: undefined, // error message\n};\n\nconst listingsReducer = (state, action) => {\n  switch (action.type) {\n    case ACTIONS.FETCH_LISTINGS:\n      return {\n        ...state,\n        state: STATE.FETCHING,\n        listings: [],\n      };\n    case ACTIONS.FETCH_LISTINGS_SUCCESS:\n      return {\n        ...state,\n        state: STATE.IDLE,\n        listings: [...action.listings],\n      };\n    case ACTIONS.FETCH_LISTINGS_ERROR:\n      return {\n        ...state,\n        state: STATE.ERROR,\n        listings: [],\n        error: action.error,\n      };\n\n    case ACTIONS.VIEW_LISTING:\n    case ACTIONS.REPLY:\n    default:\n      return state;\n  }\n};\n\nconst ListingsContext = React.createContext();\n\nconst ListingsProvider = ({ children }) => {\n  const [state, dispatch] = React.useReducer(listingsReducer, initialState);\n\n  const value = {\n    listings: state.listings,\n    state: state.state,\n    error: state.error,\n    fetch: (endpoint, query) => {\n      dispatch({ type: ACTIONS.FETCH_LISTINGS });\n      fetch(endpoint)\n        .then((response) => response.json())\n        .then((response) => {\n          dispatch({\n            type: ACTIONS.FETCH_LISTINGS_SUCCESS,\n            listings: response,\n          });\n        })\n        .catch((error) => {\n          dispatch({\n            type: ACTIONS.FETCH_LISTINGS_ERROR,\n            error: error.message,\n          });\n        });\n    },\n    view: (title) => {\n      console.info(`View: ${title}`);\n      dispatch({ type: ACTIONS.VIEW_LISTING });\n    },\n    reply: (title) => {\n      console.info(`Reply: ${title}`);\n      dispatch({ type: ACTIONS.REPLY });\n    },\n  };\n\n  return (\n    <ListingsContext.Provider value={value}>\n      {children}\n    </ListingsContext.Provider>\n  );\n};\n\nconst formatAsCurrency = (int) => {\n  if (!int) {\n    return;\n  }\n\n  return new Intl.NumberFormat(\"en-AU\", {\n    style: \"currency\",\n    currency: \"AUD\",\n  }).format(int);\n};\n\nconst Listing = ({ listing, view, reply }) => (\n  <li className=\"listing\">\n    <h6 className=\"listing__title\">{listing.title}</h6>\n    <div className=\"listing__metadata\">\n      <span className=\"listing__text--higlighted\">\n        {formatAsCurrency(listing.price)}\n      </span>\n      <span className=\"listing__text\">{listing.location}</span>\n    </div>\n    <img className=\"listing__img\" title={listing.title} src={listing.imgUrl} />\n    <p className=\"listing__desc\">{listing.description}</p>\n    <div className=\"listing__actions\">\n      <button className=\"listings__button\" onClick={() => view(listing.title)}>\n        View\n      </button>\n      <button className=\"listings__button\" onClick={() => reply(listing.title)}>\n        Reply\n      </button>\n    </div>\n  </li>\n);\n\nconst Spinner = () => (\n  <div className=\"spinner__container\">\n    <div className=\"spinner\" />\n  </div>\n);\n\nconst Error = ({ error }) => (\n  <div className=\"listings__error\" role=\"alert\">\n    <div className=\"listings__errorMessage\">\n      <h3>An error occured, Server responded with {error}!</h3>\n      <p>Reload to try again!</p>\n    </div>\n    <button className=\"listings__button\" onClick={() => location.reload()}>\n      Reload\n    </button>\n  </div>\n);\n\nconst ListingsContainer = ({ dataEndpoint, keyword = \"\", location }) => {\n  const { state, fetch, error, listings, view, reply } =\n    React.useContext(ListingsContext);\n\n  React.useEffect(() => {\n    fetch(dataEndpoint, keyword);\n  }, [dataEndpoint, keyword]);\n\n  if (state === STATE.FETCHING) {\n    return <Spinner />;\n  }\n\n  if (state === STATE.ERROR && error) {\n    return <Error error={error} />;\n  }\n\n  return (\n    <>\n      <div className=\"listings__header\">\n        <h1>Search results</h1>\n        <h2>\n          <span className=\"listings__text--higlighted\">\n            {listings.length} results\n          </span>{\" \"}\n          for <span className=\"listings__text--higlighted\">{keyword}</span> in{\" \"}\n          <span className=\"listings__text--higlighted\">{location}</span>\n        </h2>\n      </div>\n\n      {listings.length === 0 && (\n        <span className=\"listings__noResults\">No results found!</span>\n      )}\n\n      {listings.length > 0 && (\n        <ol className=\"listings__grid\">\n          {listings.map((listing, index) => (\n            <Listing listing={listing} key={index} view={view} reply={reply} />\n          ))}\n        </ol>\n      )}\n    </>\n  );\n};\n\nconst Listings = (props) => (\n  <ListingsProvider>\n    <ListingsContainer {...props} />\n  </ListingsProvider>\n);\n\nexport default Listings;\n"]},"metadata":{},"sourceType":"module"}